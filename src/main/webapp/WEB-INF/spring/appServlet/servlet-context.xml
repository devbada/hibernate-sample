<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
    <context:annotation-config />
	<context:component-scan base-package="com.jeongahn.sample" />
	
	<annotation-driven/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />
	
	<!-- MultipartResolver : Commons FileUpload를 이용한 Multipart Resolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 최대허용크기(10MB) -->
	   <beans:property name="maxUploadSize" value="10000000"/>
	</beans:bean>
		
		<!-- ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- Request Media 타입 -->
		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="xml" value="application/xml"/>
				<beans:entry key="html" value="text/html"/>
				<beans:entry key="text" value="text/html"/>
			</beans:map>
		</beans:property>
		<beans:property name="viewResolvers">
			<beans:list>
				<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
					<beans:property name="prefix" value="/WEB-INF/views/"/>
					<beans:property name="suffix" value=".jsp"/>
				</beans:bean>
			</beans:list>
		</beans:property>
		<beans:property name="defaultViews">
			<beans:list>
			   <beans:ref bean="JsonView"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
	
	<!-- MVC 모델을 JSON 타입으로 직렬화해주는 Spring MVC 뷰 -->
	<beans:bean id="JsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:messages" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
	<beans:bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/connection/jdbc.properties" />

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation">
			<beans:value>classpath:hibernate.cfg.xml</beans:value>
		</beans:property>
		<beans:property name="configurationClass">
			<beans:value>org.hibernate.cfg.AnnotationConfiguration</beans:value>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${jdbc.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="format_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.connection.isolation">2</beans:prop>
				<beans:prop key="hibernate.current_session_context_class">thread</beans:prop>
				<beans:prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</beans:prop>
			</beans:props> 
		</beans:property>
	</beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
    
</beans:beans>
